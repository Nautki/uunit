use crate::*;
pub type UnitBels = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
pub type Bels<T> = Quantity<T, UnitBels>;
#[cfg(feature = "si_quetta")]
pub type UnitQuettabels = DimensionStruct<P30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quetta")]
pub type Quettabels<T> = Quantity<T, UnitQuettabels>;
#[cfg(feature = "si_ronna")]
pub type UnitRonnabels = DimensionStruct<P27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronna")]
pub type Ronnabels<T> = Quantity<T, UnitRonnabels>;
#[cfg(feature = "si_yotta")]
pub type UnitYottabels = DimensionStruct<P24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yotta")]
pub type Yottabels<T> = Quantity<T, UnitYottabels>;
#[cfg(feature = "si_zetta")]
pub type UnitZettabels = DimensionStruct<P21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zetta")]
pub type Zettabels<T> = Quantity<T, UnitZettabels>;
#[cfg(feature = "si_exa")]
pub type UnitExabels = DimensionStruct<P18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_exa")]
pub type Exabels<T> = Quantity<T, UnitExabels>;
#[cfg(feature = "si_peta")]
pub type UnitPetabels = DimensionStruct<P15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_peta")]
pub type Petabels<T> = Quantity<T, UnitPetabels>;
#[cfg(feature = "si_tera")]
pub type UnitTerabels = DimensionStruct<P12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_tera")]
pub type Terabels<T> = Quantity<T, UnitTerabels>;
#[cfg(feature = "si_giga")]
pub type UnitGigabels = DimensionStruct<P9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_giga")]
pub type Gigabels<T> = Quantity<T, UnitGigabels>;
#[cfg(feature = "si_mega")]
pub type UnitMegabels = DimensionStruct<P6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_mega")]
pub type Megabels<T> = Quantity<T, UnitMegabels>;
#[cfg(feature = "si_kilo")]
pub type UnitKilobels = DimensionStruct<P3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_kilo")]
pub type Kilobels<T> = Quantity<T, UnitKilobels>;
#[cfg(feature = "si_hecto")]
pub type UnitHectobels = DimensionStruct<P2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_hecto")]
pub type Hectobels<T> = Quantity<T, UnitHectobels>;
#[cfg(feature = "si_deca")]
pub type UnitDecabels = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deca")]
pub type Decabels<T> = Quantity<T, UnitDecabels>;
#[cfg(feature = "si_deci")]
pub type UnitDecibels = DimensionStruct<N1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deci")]
pub type Decibels<T> = Quantity<T, UnitDecibels>;
#[cfg(feature = "si_centi")]
pub type UnitCentibels = DimensionStruct<N2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_centi")]
pub type Centibels<T> = Quantity<T, UnitCentibels>;
#[cfg(feature = "si_milli")]
pub type UnitMillibels = DimensionStruct<N3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_milli")]
pub type Millibels<T> = Quantity<T, UnitMillibels>;
#[cfg(feature = "si_micro")]
pub type UnitMicrobels = DimensionStruct<N6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_micro")]
pub type Microbels<T> = Quantity<T, UnitMicrobels>;
#[cfg(feature = "si_nano")]
pub type UnitNanobels = DimensionStruct<N9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_nano")]
pub type Nanobels<T> = Quantity<T, UnitNanobels>;
#[cfg(feature = "si_pico")]
pub type UnitPicobels = DimensionStruct<N12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_pico")]
pub type Picobels<T> = Quantity<T, UnitPicobels>;
#[cfg(feature = "si_femto")]
pub type UnitFemtobels = DimensionStruct<N15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_femto")]
pub type Femtobels<T> = Quantity<T, UnitFemtobels>;
#[cfg(feature = "si_atto")]
pub type UnitAttobels = DimensionStruct<N18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_atto")]
pub type Attobels<T> = Quantity<T, UnitAttobels>;
#[cfg(feature = "si_zepto")]
pub type UnitZeptobels = DimensionStruct<N21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zepto")]
pub type Zeptobels<T> = Quantity<T, UnitZeptobels>;
#[cfg(feature = "si_yocto")]
pub type UnitYoctobels = DimensionStruct<N24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yocto")]
pub type Yoctobels<T> = Quantity<T, UnitYoctobels>;
#[cfg(feature = "si_ronto")]
pub type UnitRontobels = DimensionStruct<N27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronto")]
pub type Rontobels<T> = Quantity<T, UnitRontobels>;
#[cfg(feature = "si_quecto")]
pub type UnitQuectobels = DimensionStruct<N30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quecto")]
pub type Quectobels<T> = Quantity<T, UnitQuectobels>;