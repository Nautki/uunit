use crate::*;
pub type UnitMoles = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
pub type Moles<T> = Quantity<T, UnitMoles>;
#[cfg(feature = "si_quetta")]
pub type UnitQuettamoles = DimensionStruct<P30, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quetta")]
pub type Quettamoles<T> = Quantity<T, UnitQuettamoles>;
#[cfg(feature = "si_ronna")]
pub type UnitRonnamoles = DimensionStruct<P27, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronna")]
pub type Ronnamoles<T> = Quantity<T, UnitRonnamoles>;
#[cfg(feature = "si_yotta")]
pub type UnitYottamoles = DimensionStruct<P24, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yotta")]
pub type Yottamoles<T> = Quantity<T, UnitYottamoles>;
#[cfg(feature = "si_zetta")]
pub type UnitZettamoles = DimensionStruct<P21, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zetta")]
pub type Zettamoles<T> = Quantity<T, UnitZettamoles>;
#[cfg(feature = "si_exa")]
pub type UnitExamoles = DimensionStruct<P18, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_exa")]
pub type Examoles<T> = Quantity<T, UnitExamoles>;
#[cfg(feature = "si_peta")]
pub type UnitPetamoles = DimensionStruct<P15, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_peta")]
pub type Petamoles<T> = Quantity<T, UnitPetamoles>;
#[cfg(feature = "si_tera")]
pub type UnitTeramoles = DimensionStruct<P12, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_tera")]
pub type Teramoles<T> = Quantity<T, UnitTeramoles>;
#[cfg(feature = "si_giga")]
pub type UnitGigamoles = DimensionStruct<P9, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_giga")]
pub type Gigamoles<T> = Quantity<T, UnitGigamoles>;
#[cfg(feature = "si_mega")]
pub type UnitMegamoles = DimensionStruct<P6, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_mega")]
pub type Megamoles<T> = Quantity<T, UnitMegamoles>;
#[cfg(feature = "si_kilo")]
pub type UnitKilomoles = DimensionStruct<P3, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_kilo")]
pub type Kilomoles<T> = Quantity<T, UnitKilomoles>;
#[cfg(feature = "si_hecto")]
pub type UnitHectomoles = DimensionStruct<P2, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_hecto")]
pub type Hectomoles<T> = Quantity<T, UnitHectomoles>;
#[cfg(feature = "si_deca")]
pub type UnitDecamoles = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deca")]
pub type Decamoles<T> = Quantity<T, UnitDecamoles>;
#[cfg(feature = "si_deci")]
pub type UnitDecimoles = DimensionStruct<N1, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deci")]
pub type Decimoles<T> = Quantity<T, UnitDecimoles>;
#[cfg(feature = "si_centi")]
pub type UnitCentimoles = DimensionStruct<N2, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_centi")]
pub type Centimoles<T> = Quantity<T, UnitCentimoles>;
#[cfg(feature = "si_milli")]
pub type UnitMillimoles = DimensionStruct<N3, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_milli")]
pub type Millimoles<T> = Quantity<T, UnitMillimoles>;
#[cfg(feature = "si_micro")]
pub type UnitMicromoles = DimensionStruct<N6, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_micro")]
pub type Micromoles<T> = Quantity<T, UnitMicromoles>;
#[cfg(feature = "si_nano")]
pub type UnitNanomoles = DimensionStruct<N9, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_nano")]
pub type Nanomoles<T> = Quantity<T, UnitNanomoles>;
#[cfg(feature = "si_pico")]
pub type UnitPicomoles = DimensionStruct<N12, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_pico")]
pub type Picomoles<T> = Quantity<T, UnitPicomoles>;
#[cfg(feature = "si_femto")]
pub type UnitFemtomoles = DimensionStruct<N15, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_femto")]
pub type Femtomoles<T> = Quantity<T, UnitFemtomoles>;
#[cfg(feature = "si_atto")]
pub type UnitAttomoles = DimensionStruct<N18, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_atto")]
pub type Attomoles<T> = Quantity<T, UnitAttomoles>;
#[cfg(feature = "si_zepto")]
pub type UnitZeptomoles = DimensionStruct<N21, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zepto")]
pub type Zeptomoles<T> = Quantity<T, UnitZeptomoles>;
#[cfg(feature = "si_yocto")]
pub type UnitYoctomoles = DimensionStruct<N24, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yocto")]
pub type Yoctomoles<T> = Quantity<T, UnitYoctomoles>;
#[cfg(feature = "si_ronto")]
pub type UnitRontomoles = DimensionStruct<N27, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronto")]
pub type Rontomoles<T> = Quantity<T, UnitRontomoles>;
#[cfg(feature = "si_quecto")]
pub type UnitQuectomoles = DimensionStruct<N30, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quecto")]
pub type Quectomoles<T> = Quantity<T, UnitQuectomoles>;