use crate::*;
pub type UnitGrams = DimensionStruct<P1, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
pub type Grams<T> = Quantity<T, UnitGrams>;
#[cfg(feature = "si_quetta")]
pub type UnitQuettagrams = DimensionStruct<P30, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quetta")]
pub type Quettagrams<T> = Quantity<T, UnitQuettagrams>;
#[cfg(feature = "si_ronna")]
pub type UnitRonnagrams = DimensionStruct<P27, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronna")]
pub type Ronnagrams<T> = Quantity<T, UnitRonnagrams>;
#[cfg(feature = "si_yotta")]
pub type UnitYottagrams = DimensionStruct<P24, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yotta")]
pub type Yottagrams<T> = Quantity<T, UnitYottagrams>;
#[cfg(feature = "si_zetta")]
pub type UnitZettagrams = DimensionStruct<P21, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zetta")]
pub type Zettagrams<T> = Quantity<T, UnitZettagrams>;
#[cfg(feature = "si_exa")]
pub type UnitExagrams = DimensionStruct<P18, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_exa")]
pub type Exagrams<T> = Quantity<T, UnitExagrams>;
#[cfg(feature = "si_peta")]
pub type UnitPetagrams = DimensionStruct<P15, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_peta")]
pub type Petagrams<T> = Quantity<T, UnitPetagrams>;
#[cfg(feature = "si_tera")]
pub type UnitTeragrams = DimensionStruct<P12, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_tera")]
pub type Teragrams<T> = Quantity<T, UnitTeragrams>;
#[cfg(feature = "si_giga")]
pub type UnitGigagrams = DimensionStruct<P9, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_giga")]
pub type Gigagrams<T> = Quantity<T, UnitGigagrams>;
#[cfg(feature = "si_mega")]
pub type UnitMegagrams = DimensionStruct<P6, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_mega")]
pub type Megagrams<T> = Quantity<T, UnitMegagrams>;
#[cfg(feature = "si_kilo")]
pub type UnitKilograms = DimensionStruct<P3, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_kilo")]
pub type Kilograms<T> = Quantity<T, UnitKilograms>;
#[cfg(feature = "si_hecto")]
pub type UnitHectograms = DimensionStruct<P2, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_hecto")]
pub type Hectograms<T> = Quantity<T, UnitHectograms>;
#[cfg(feature = "si_deca")]
pub type UnitDecagrams = DimensionStruct<P1, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deca")]
pub type Decagrams<T> = Quantity<T, UnitDecagrams>;
#[cfg(feature = "si_deci")]
pub type UnitDecigrams = DimensionStruct<N1, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deci")]
pub type Decigrams<T> = Quantity<T, UnitDecigrams>;
#[cfg(feature = "si_centi")]
pub type UnitCentigrams = DimensionStruct<N2, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_centi")]
pub type Centigrams<T> = Quantity<T, UnitCentigrams>;
#[cfg(feature = "si_milli")]
pub type UnitMilligrams = DimensionStruct<N3, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_milli")]
pub type Milligrams<T> = Quantity<T, UnitMilligrams>;
#[cfg(feature = "si_micro")]
pub type UnitMicrograms = DimensionStruct<N6, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_micro")]
pub type Micrograms<T> = Quantity<T, UnitMicrograms>;
#[cfg(feature = "si_nano")]
pub type UnitNanograms = DimensionStruct<N9, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_nano")]
pub type Nanograms<T> = Quantity<T, UnitNanograms>;
#[cfg(feature = "si_pico")]
pub type UnitPicograms = DimensionStruct<N12, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_pico")]
pub type Picograms<T> = Quantity<T, UnitPicograms>;
#[cfg(feature = "si_femto")]
pub type UnitFemtograms = DimensionStruct<N15, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_femto")]
pub type Femtograms<T> = Quantity<T, UnitFemtograms>;
#[cfg(feature = "si_atto")]
pub type UnitAttograms = DimensionStruct<N18, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_atto")]
pub type Attograms<T> = Quantity<T, UnitAttograms>;
#[cfg(feature = "si_zepto")]
pub type UnitZeptograms = DimensionStruct<N21, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zepto")]
pub type Zeptograms<T> = Quantity<T, UnitZeptograms>;
#[cfg(feature = "si_yocto")]
pub type UnitYoctograms = DimensionStruct<N24, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yocto")]
pub type Yoctograms<T> = Quantity<T, UnitYoctograms>;
#[cfg(feature = "si_ronto")]
pub type UnitRontograms = DimensionStruct<N27, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronto")]
pub type Rontograms<T> = Quantity<T, UnitRontograms>;
#[cfg(feature = "si_quecto")]
pub type UnitQuectograms = DimensionStruct<N30, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quecto")]
pub type Quectograms<T> = Quantity<T, UnitQuectograms>;