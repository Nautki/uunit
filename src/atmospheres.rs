use crate::*;
pub type UnitAtmospheres = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
pub type Atmospheres<T> = Quantity<T, UnitAtmospheres>;
#[cfg(feature = "si_quetta")]
pub type UnitQuettaatmospheres = DimensionStruct<P30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_quetta")]
pub type Quettaatmospheres<T> = Quantity<T, UnitQuettaatmospheres>;
#[cfg(feature = "si_ronna")]
pub type UnitRonnaatmospheres = DimensionStruct<P27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_ronna")]
pub type Ronnaatmospheres<T> = Quantity<T, UnitRonnaatmospheres>;
#[cfg(feature = "si_yotta")]
pub type UnitYottaatmospheres = DimensionStruct<P24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_yotta")]
pub type Yottaatmospheres<T> = Quantity<T, UnitYottaatmospheres>;
#[cfg(feature = "si_zetta")]
pub type UnitZettaatmospheres = DimensionStruct<P21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_zetta")]
pub type Zettaatmospheres<T> = Quantity<T, UnitZettaatmospheres>;
#[cfg(feature = "si_exa")]
pub type UnitExaatmospheres = DimensionStruct<P18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_exa")]
pub type Exaatmospheres<T> = Quantity<T, UnitExaatmospheres>;
#[cfg(feature = "si_peta")]
pub type UnitPetaatmospheres = DimensionStruct<P15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_peta")]
pub type Petaatmospheres<T> = Quantity<T, UnitPetaatmospheres>;
#[cfg(feature = "si_tera")]
pub type UnitTeraatmospheres = DimensionStruct<P12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_tera")]
pub type Teraatmospheres<T> = Quantity<T, UnitTeraatmospheres>;
#[cfg(feature = "si_giga")]
pub type UnitGigaatmospheres = DimensionStruct<P9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_giga")]
pub type Gigaatmospheres<T> = Quantity<T, UnitGigaatmospheres>;
#[cfg(feature = "si_mega")]
pub type UnitMegaatmospheres = DimensionStruct<P6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_mega")]
pub type Megaatmospheres<T> = Quantity<T, UnitMegaatmospheres>;
#[cfg(feature = "si_kilo")]
pub type UnitKiloatmospheres = DimensionStruct<P3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_kilo")]
pub type Kiloatmospheres<T> = Quantity<T, UnitKiloatmospheres>;
#[cfg(feature = "si_hecto")]
pub type UnitHectoatmospheres = DimensionStruct<P2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_hecto")]
pub type Hectoatmospheres<T> = Quantity<T, UnitHectoatmospheres>;
#[cfg(feature = "si_deca")]
pub type UnitDecaatmospheres = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_deca")]
pub type Decaatmospheres<T> = Quantity<T, UnitDecaatmospheres>;
#[cfg(feature = "si_deci")]
pub type UnitDeciatmospheres = DimensionStruct<N1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_deci")]
pub type Deciatmospheres<T> = Quantity<T, UnitDeciatmospheres>;
#[cfg(feature = "si_centi")]
pub type UnitCentiatmospheres = DimensionStruct<N2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_centi")]
pub type Centiatmospheres<T> = Quantity<T, UnitCentiatmospheres>;
#[cfg(feature = "si_milli")]
pub type UnitMilliatmospheres = DimensionStruct<N3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_milli")]
pub type Milliatmospheres<T> = Quantity<T, UnitMilliatmospheres>;
#[cfg(feature = "si_micro")]
pub type UnitMicroatmospheres = DimensionStruct<N6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_micro")]
pub type Microatmospheres<T> = Quantity<T, UnitMicroatmospheres>;
#[cfg(feature = "si_nano")]
pub type UnitNanoatmospheres = DimensionStruct<N9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_nano")]
pub type Nanoatmospheres<T> = Quantity<T, UnitNanoatmospheres>;
#[cfg(feature = "si_pico")]
pub type UnitPicoatmospheres = DimensionStruct<N12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_pico")]
pub type Picoatmospheres<T> = Quantity<T, UnitPicoatmospheres>;
#[cfg(feature = "si_femto")]
pub type UnitFemtoatmospheres = DimensionStruct<N15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_femto")]
pub type Femtoatmospheres<T> = Quantity<T, UnitFemtoatmospheres>;
#[cfg(feature = "si_atto")]
pub type UnitAttoatmospheres = DimensionStruct<N18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_atto")]
pub type Attoatmospheres<T> = Quantity<T, UnitAttoatmospheres>;
#[cfg(feature = "si_zepto")]
pub type UnitZeptoatmospheres = DimensionStruct<N21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_zepto")]
pub type Zeptoatmospheres<T> = Quantity<T, UnitZeptoatmospheres>;
#[cfg(feature = "si_yocto")]
pub type UnitYoctoatmospheres = DimensionStruct<N24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_yocto")]
pub type Yoctoatmospheres<T> = Quantity<T, UnitYoctoatmospheres>;
#[cfg(feature = "si_ronto")]
pub type UnitRontoatmospheres = DimensionStruct<N27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_ronto")]
pub type Rontoatmospheres<T> = Quantity<T, UnitRontoatmospheres>;
#[cfg(feature = "si_quecto")]
pub type UnitQuectoatmospheres = DimensionStruct<N30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0>;
#[cfg(feature = "si_quecto")]
pub type Quectoatmospheres<T> = Quantity<T, UnitQuectoatmospheres>;