use crate::*;
pub type UnitDaltons = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
pub type Daltons<T> = Quantity<T, UnitDaltons>;
#[cfg(feature = "si_quetta")]
pub type UnitQuettadaltons = DimensionStruct<P30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quetta")]
pub type Quettadaltons<T> = Quantity<T, UnitQuettadaltons>;
#[cfg(feature = "si_ronna")]
pub type UnitRonnadaltons = DimensionStruct<P27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronna")]
pub type Ronnadaltons<T> = Quantity<T, UnitRonnadaltons>;
#[cfg(feature = "si_yotta")]
pub type UnitYottadaltons = DimensionStruct<P24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yotta")]
pub type Yottadaltons<T> = Quantity<T, UnitYottadaltons>;
#[cfg(feature = "si_zetta")]
pub type UnitZettadaltons = DimensionStruct<P21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zetta")]
pub type Zettadaltons<T> = Quantity<T, UnitZettadaltons>;
#[cfg(feature = "si_exa")]
pub type UnitExadaltons = DimensionStruct<P18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_exa")]
pub type Exadaltons<T> = Quantity<T, UnitExadaltons>;
#[cfg(feature = "si_peta")]
pub type UnitPetadaltons = DimensionStruct<P15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_peta")]
pub type Petadaltons<T> = Quantity<T, UnitPetadaltons>;
#[cfg(feature = "si_tera")]
pub type UnitTeradaltons = DimensionStruct<P12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_tera")]
pub type Teradaltons<T> = Quantity<T, UnitTeradaltons>;
#[cfg(feature = "si_giga")]
pub type UnitGigadaltons = DimensionStruct<P9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_giga")]
pub type Gigadaltons<T> = Quantity<T, UnitGigadaltons>;
#[cfg(feature = "si_mega")]
pub type UnitMegadaltons = DimensionStruct<P6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_mega")]
pub type Megadaltons<T> = Quantity<T, UnitMegadaltons>;
#[cfg(feature = "si_kilo")]
pub type UnitKilodaltons = DimensionStruct<P3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_kilo")]
pub type Kilodaltons<T> = Quantity<T, UnitKilodaltons>;
#[cfg(feature = "si_hecto")]
pub type UnitHectodaltons = DimensionStruct<P2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_hecto")]
pub type Hectodaltons<T> = Quantity<T, UnitHectodaltons>;
#[cfg(feature = "si_deca")]
pub type UnitDecadaltons = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deca")]
pub type Decadaltons<T> = Quantity<T, UnitDecadaltons>;
#[cfg(feature = "si_deci")]
pub type UnitDecidaltons = DimensionStruct<N1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deci")]
pub type Decidaltons<T> = Quantity<T, UnitDecidaltons>;
#[cfg(feature = "si_centi")]
pub type UnitCentidaltons = DimensionStruct<N2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_centi")]
pub type Centidaltons<T> = Quantity<T, UnitCentidaltons>;
#[cfg(feature = "si_milli")]
pub type UnitMillidaltons = DimensionStruct<N3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_milli")]
pub type Millidaltons<T> = Quantity<T, UnitMillidaltons>;
#[cfg(feature = "si_micro")]
pub type UnitMicrodaltons = DimensionStruct<N6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_micro")]
pub type Microdaltons<T> = Quantity<T, UnitMicrodaltons>;
#[cfg(feature = "si_nano")]
pub type UnitNanodaltons = DimensionStruct<N9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_nano")]
pub type Nanodaltons<T> = Quantity<T, UnitNanodaltons>;
#[cfg(feature = "si_pico")]
pub type UnitPicodaltons = DimensionStruct<N12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_pico")]
pub type Picodaltons<T> = Quantity<T, UnitPicodaltons>;
#[cfg(feature = "si_femto")]
pub type UnitFemtodaltons = DimensionStruct<N15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_femto")]
pub type Femtodaltons<T> = Quantity<T, UnitFemtodaltons>;
#[cfg(feature = "si_atto")]
pub type UnitAttodaltons = DimensionStruct<N18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_atto")]
pub type Attodaltons<T> = Quantity<T, UnitAttodaltons>;
#[cfg(feature = "si_zepto")]
pub type UnitZeptodaltons = DimensionStruct<N21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zepto")]
pub type Zeptodaltons<T> = Quantity<T, UnitZeptodaltons>;
#[cfg(feature = "si_yocto")]
pub type UnitYoctodaltons = DimensionStruct<N24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yocto")]
pub type Yoctodaltons<T> = Quantity<T, UnitYoctodaltons>;
#[cfg(feature = "si_ronto")]
pub type UnitRontodaltons = DimensionStruct<N27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronto")]
pub type Rontodaltons<T> = Quantity<T, UnitRontodaltons>;
#[cfg(feature = "si_quecto")]
pub type UnitQuectodaltons = DimensionStruct<N30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quecto")]
pub type Quectodaltons<T> = Quantity<T, UnitQuectodaltons>;