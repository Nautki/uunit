use crate::*;
pub type UnitByte = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
pub type Byte<T> = Quantity<T, UnitByte>;
#[cfg(feature = "si_quetta")]
pub type UnitQuettabyte = DimensionStruct<P30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quetta")]
pub type Quettabyte<T> = Quantity<T, UnitQuettabyte>;
#[cfg(feature = "si_ronna")]
pub type UnitRonnabyte = DimensionStruct<P27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronna")]
pub type Ronnabyte<T> = Quantity<T, UnitRonnabyte>;
#[cfg(feature = "si_yotta")]
pub type UnitYottabyte = DimensionStruct<P24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yotta")]
pub type Yottabyte<T> = Quantity<T, UnitYottabyte>;
#[cfg(feature = "si_zetta")]
pub type UnitZettabyte = DimensionStruct<P21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zetta")]
pub type Zettabyte<T> = Quantity<T, UnitZettabyte>;
#[cfg(feature = "si_exa")]
pub type UnitExabyte = DimensionStruct<P18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_exa")]
pub type Exabyte<T> = Quantity<T, UnitExabyte>;
#[cfg(feature = "si_peta")]
pub type UnitPetabyte = DimensionStruct<P15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_peta")]
pub type Petabyte<T> = Quantity<T, UnitPetabyte>;
#[cfg(feature = "si_tera")]
pub type UnitTerabyte = DimensionStruct<P12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_tera")]
pub type Terabyte<T> = Quantity<T, UnitTerabyte>;
#[cfg(feature = "si_giga")]
pub type UnitGigabyte = DimensionStruct<P9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_giga")]
pub type Gigabyte<T> = Quantity<T, UnitGigabyte>;
#[cfg(feature = "si_mega")]
pub type UnitMegabyte = DimensionStruct<P6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_mega")]
pub type Megabyte<T> = Quantity<T, UnitMegabyte>;
#[cfg(feature = "si_kilo")]
pub type UnitKilobyte = DimensionStruct<P3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_kilo")]
pub type Kilobyte<T> = Quantity<T, UnitKilobyte>;
#[cfg(feature = "si_hecto")]
pub type UnitHectobyte = DimensionStruct<P2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_hecto")]
pub type Hectobyte<T> = Quantity<T, UnitHectobyte>;
#[cfg(feature = "si_deca")]
pub type UnitDecabyte = DimensionStruct<P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deca")]
pub type Decabyte<T> = Quantity<T, UnitDecabyte>;
#[cfg(feature = "si_deci")]
pub type UnitDecibyte = DimensionStruct<N1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_deci")]
pub type Decibyte<T> = Quantity<T, UnitDecibyte>;
#[cfg(feature = "si_centi")]
pub type UnitCentibyte = DimensionStruct<N2, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_centi")]
pub type Centibyte<T> = Quantity<T, UnitCentibyte>;
#[cfg(feature = "si_milli")]
pub type UnitMillibyte = DimensionStruct<N3, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_milli")]
pub type Millibyte<T> = Quantity<T, UnitMillibyte>;
#[cfg(feature = "si_micro")]
pub type UnitMicrobyte = DimensionStruct<N6, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_micro")]
pub type Microbyte<T> = Quantity<T, UnitMicrobyte>;
#[cfg(feature = "si_nano")]
pub type UnitNanobyte = DimensionStruct<N9, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_nano")]
pub type Nanobyte<T> = Quantity<T, UnitNanobyte>;
#[cfg(feature = "si_pico")]
pub type UnitPicobyte = DimensionStruct<N12, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_pico")]
pub type Picobyte<T> = Quantity<T, UnitPicobyte>;
#[cfg(feature = "si_femto")]
pub type UnitFemtobyte = DimensionStruct<N15, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_femto")]
pub type Femtobyte<T> = Quantity<T, UnitFemtobyte>;
#[cfg(feature = "si_atto")]
pub type UnitAttobyte = DimensionStruct<N18, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_atto")]
pub type Attobyte<T> = Quantity<T, UnitAttobyte>;
#[cfg(feature = "si_zepto")]
pub type UnitZeptobyte = DimensionStruct<N21, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_zepto")]
pub type Zeptobyte<T> = Quantity<T, UnitZeptobyte>;
#[cfg(feature = "si_yocto")]
pub type UnitYoctobyte = DimensionStruct<N24, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_yocto")]
pub type Yoctobyte<T> = Quantity<T, UnitYoctobyte>;
#[cfg(feature = "si_ronto")]
pub type UnitRontobyte = DimensionStruct<N27, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_ronto")]
pub type Rontobyte<T> = Quantity<T, UnitRontobyte>;
#[cfg(feature = "si_quecto")]
pub type UnitQuectobyte = DimensionStruct<N30, Z0, Z0, Z0, Z0, Z0, Z0, Z0, P1, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0, Z0>;
#[cfg(feature = "si_quecto")]
pub type Quectobyte<T> = Quantity<T, UnitQuectobyte>;